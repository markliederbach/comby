version: "3"

tasks:
  bump:
    vars:
      CHANGE_TYPE: '{{default "nil" .CHANGE_TYPE}}'
      CURRENT_TAG:
        sh: git describe --tags | grep -o -E \\d+\\.\\d+\\.\\d+
    cmds:
      - |
        level="{{.CHANGE_TYPE}}"
        tag="{{.CURRENT_TAG}}"
        current="${tag//v}"
        major=$(echo $current | cut -d. -f1)
        minor=$(echo $current | cut -d. -f2)
        patch=$(echo $current | cut -d. -f3)
        case $level in
            patch)
                patch=$((patch+1))
            ;;
            minor)
                patch=0
                minor=$((minor+1))
            ;;
            major)
                patch=0
                minor=0
                major=$((major+1))
            ;;
            *)
                echo "Invalid level passed"
                return 2
        esac
        new="v$major.$minor.$patch"
        echo "[Current] v$current -> [New] $new"
        git tag -l | xargs git tag -d > /dev/null
        git fetch --tags > /dev/null
        git tag $new && git push origin $new
    preconditions:
      - sh: "[[ $(git rev-parse --abbrev-ref HEAD) == 'main' ]]"
        msg: Must be on main to push a tag
      - sh: "git diff --quiet"
        msg: No uncommmitted files allowed before publishing
      - sh: "[ '{{.CHANGE_TYPE}}' != 'nil' ]"
        msg: Must run one of `task bump:[major, minor, patch]`
    silent: true

  bump:major:
    desc: Bump the major version
    cmds:
      - task: bump
        vars: { CHANGE_TYPE: "major" }
  bump:minor:
    desc: Bump the minor version
    cmds:
      - task: bump
        vars: { CHANGE_TYPE: "minor" }
  bump:patch:
    desc: Bump the patch version
    cmds:
      - task: bump
        vars: { CHANGE_TYPE: "patch" }